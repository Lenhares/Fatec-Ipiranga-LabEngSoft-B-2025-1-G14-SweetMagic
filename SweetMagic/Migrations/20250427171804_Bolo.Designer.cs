// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SweetMagic.Data;

#nullable disable

namespace SweetMagic.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250427171804_Bolo")]
    partial class Bolo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SweetMagic.Models.Bolo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("coberturaId")
                        .HasColumnType("int");

                    b.Property<int>("criadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("imagemFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("peso")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("coberturaId");

                    b.HasIndex("criadorId");

                    b.ToTable("Bolos");
                });

            modelBuilder.Entity("SweetMagic.Models.Camada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoloId")
                        .HasColumnType("int");

                    b.Property<int>("ordem")
                        .HasColumnType("int");

                    b.Property<string>("saborMassa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("saborRecheio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoloId");

                    b.ToTable("Camadas");
                });

            modelBuilder.Entity("SweetMagic.Models.Cobertura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("papelArroz")
                        .HasColumnType("bit");

                    b.Property<string>("tema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coberturas");
                });

            modelBuilder.Entity("SweetMagic.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerguntaSeguranca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespostaSeguranca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SweetMagic.Models.Bolo", b =>
                {
                    b.HasOne("SweetMagic.Models.Cobertura", "cobertura")
                        .WithMany()
                        .HasForeignKey("coberturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SweetMagic.Models.User", "criador")
                        .WithMany()
                        .HasForeignKey("criadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cobertura");

                    b.Navigation("criador");
                });

            modelBuilder.Entity("SweetMagic.Models.Camada", b =>
                {
                    b.HasOne("SweetMagic.Models.Bolo", "Bolo")
                        .WithMany("camadas")
                        .HasForeignKey("BoloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolo");
                });

            modelBuilder.Entity("SweetMagic.Models.Bolo", b =>
                {
                    b.Navigation("camadas");
                });
#pragma warning restore 612, 618
        }
    }
}
