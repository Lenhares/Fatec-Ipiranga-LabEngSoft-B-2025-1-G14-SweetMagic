@using SweetMagic.Helpers
@using SweetMagic.Models
@inject BoloService BoloService

<h3>Quantas camadas seu bolo deve ter?</h3>
<div class="btnContainer">
    <div class="btnGroup">
        <button class="btn @(camadas == 1 ? " selecionado" : "" )" 
        @onclick="() => SelecionarCamadas(1)">
            <img src="assets/images/designer/smallCake.png" class="btnImg" />
            <span class="btnTitulo">1</span>
        </button>
    </div>
    <div class="btnGroup">
        <button class="btn@(camadas == 2 ? " selecionado" : "" )"
        @onclick="() => SelecionarCamadas(2)"
        disabled="@(BoloService.BoloAtual.peso <= 1)">
            <img src="assets/images/designer/mediumCake.png" class="btnImg" />
            <span class="btnTitulo">2</span>
        </button>
    </div>
    <div class="btnGroup">
        <button class="btn@(camadas == 3 ? " selecionado" : "" )"
        @onclick="() => SelecionarCamadas(3)"
        disabled="@(BoloService.BoloAtual.peso <= 2)">
            <img src="assets/images/designer/bigCake.png" class="btnImg" />
            <span class="btnTitulo">3</span>
        </button>
    </div>
</div>
@code {
    [CascadingParameter]
    public Designer? designer { get; set; }

    private List<Camada>? camadasBolo = new List<Camada>();
    private int camadas = 0;

    private void SelecionarCamadas(int numCamadas) {
        if (camadas != numCamadas) // Desmarca se já estiver selecionado
        {
            camadas = numCamadas;
            for (int i = 0; i < numCamadas; i++)
            {
                Camada novaCamada = new Camada();
                novaCamada.ordem = i + 1;
                novaCamada.tipo = BoloService.BoloAtual.tipo;
                novaCamada.Bolo = BoloService.BoloAtual;
                camadasBolo!.Add(novaCamada);
            }
            BoloService.AtualizarPropriedadeBolo(nameof(Bolo.camadas), camadasBolo);
            designer!.AvisaModeloAtualizado();
        }
        else {
            camadas = 0; // Desseleciona se o mesmo botão for clicado novamente
            BoloService.AtualizarPropriedadeBolo(nameof(Bolo.camadas), new List<Camada>()); // Limpa o peso no modelo
        }
        StateHasChanged();
       }
}