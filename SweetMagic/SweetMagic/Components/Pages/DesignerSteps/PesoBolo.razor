@using SweetMagic.Helpers
@using SweetMagic.Models
@inject BoloService BoloService

<h3>Vamos começar!</h3>
<h3>Qual será o tamanho do bolo?</h3>
<div class="btnContainer">
    <div class="btnGroup">
        <button class="btn @(pesoSelecionado == 1 ? " selecionado" : "" )" @onclick="() => SelecionarPeso(1)">
            <img src="assets/images/designer/smallCake.png" class="btnImg" />
            <span class="btnTitulo">P</span>
        </button>
        <div class="btnSubContainer">
            <p class="btnSubtitulo">10 fatias</p>
            <p class="btnSubtitulo">1 camada</p>
            <p class="btnSubtitulo">1 a 1,5 kg</p>
        </div>
    </div>
    <div class="btnGroup">
        <button class="btn@(pesoSelecionado == 2 ? " selecionado" : "" )" @onclick="() => SelecionarPeso(2)">
            <img src="assets/images/designer/mediumCake.png" class="btnImg" />
            <span class="btnTitulo">M</span>
        </button>
        <div class="btnSubContainer">
            <p class="btnSubtitulo">20 fatias</p>
            <p class="btnSubtitulo">Até 2 camadas</p>
            <p class="btnSubtitulo">2 a 2,5 kg</p>
        </div>
    </div>
    <div class="btnGroup">
        <button class="btn@(pesoSelecionado == 3 ? " selecionado" : "" )" @onclick="() => SelecionarPeso(3)">
            <img src="assets/images/designer/bigCake.png" class="btnImg" />
            <span class="btnTitulo">G</span>
        </button>
        <div class="btnSubContainer">
            <p class="btnSubtitulo">30 fatias</p>
            <p class="btnSubtitulo">Até 3 camadas</p>
            <p class="btnSubtitulo">3 a 3,5 kg</p>
        </div>
    </div>
</div>
@code {
    [CascadingParameter]
    public Designer? designer { get; set; }

    private int pesoSelecionado = 0;

    private void SelecionarPeso(int peso) {
        if (pesoSelecionado != peso) // Desmarca se já estiver selecionado
        {
            pesoSelecionado = peso;
            BoloService.AtualizarPropriedadeBolo(nameof(Bolo.peso), peso);
            designer!.AvisaModeloAtualizado();
        }
        else {
            pesoSelecionado = 0; // Desseleciona se o mesmo botão for clicado novamente
            BoloService.AtualizarPropriedadeBolo(nameof(Bolo.peso), 0); // Limpa o peso no modelo
        }
        StateHasChanged();
    }
}
